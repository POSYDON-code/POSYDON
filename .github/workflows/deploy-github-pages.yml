name: Website Deploy

on:
  push:
    branches:
      - development

jobs:
  build_v1:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-tags: true
        path: 'POSYDON'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.7'
  
    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -m pip install --upgrade pip
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Load pip cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py', '**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        # install pandoc for the documentation
        sudo apt-get update -y
        sudo apt-get install gfortran swig libhdf5-serial-dev libmpich-dev -y
        sudo apt-get install pandoc -y

        # install the dependencies in python
        python -m pip install pandoc
        python -m pip install coverage cpp-coveralls flake8 pytest
        # required for python 3.7
        python -m pip install wheel

    - name: Make Documentation
      env:
        PATH_TO_POSYDON: ./
        PATH_TO_POSYDON_DATA: ./
        MESA_DIR: ./
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # make the output folder
        output_folder=$GITHUB_WORKSPACE/_build/
        echo "Output folder: $output_folder"
        mkdir $output_folder
        
        # move to the repository folder
        export PATH_TO_POSYDON=$GITHUB_WORKSPACE/POSYDON
        cd $PATH_TO_POSYDON

        # get the available tags
        TAGS=$(git tag -l | sort -V | grep "v1")
        echo "v1 filtered tags:"
        echo $TAGS

        mkdir $output_folder

        # build the documentation for each tag
        for tag in $TAGS
        do
          echo "Checking out tag: $tag"
          git checkout -f $tag
          git clean -fdx
          python -m pip install .[doc,vis]

          # build the documentation
          cd docs
          make html
          touch _build/html/.nojekyll
          
          # move and copy docs out of the POSYDON folder
          tag_without_v=${tag//v}
          mv _build/html/ $output_folder/$tag_without_v

          # cleanup for the next build
          make clean
          cd ../
        done

    - name: Deploy to GitHub Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: ~/docs/
        dry_run: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  build_v2:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-tags: true
        path: 'POSYDON'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
  
    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -m pip install --upgrade pip
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Load pip cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py', '**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        # install pandoc for the documentation
        sudo apt-get update -y
        sudo apt-get install gfortran swig libhdf5-serial-dev libmpich-dev -y
        sudo apt-get install pandoc -y

        # install the dependencies in python
        python -m pip install pandoc
        python -m pip install coverage cpp-coveralls flake8 pytest

    - name: Make Documentation
      env:
        PATH_TO_POSYDON: ./
        PATH_TO_POSYDON_DATA: ./
        MESA_DIR: ./
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # make the output folder
        output_folder=$GITHUB_WORKSPACE/_build/
        echo "Output folder: $output_folder"
        mkdir $output_folder

        # move to the repository folder
        export PATH_TO_POSYDON=$GITHUB_WORKSPACE/POSYDON
        cd $PATH_TO_POSYDON

        # get the available tags
        TAGS=$(git tag -l | sort -V | grep "v2")
        echo "v2 filtered tags:"
        echo $TAGS

        # build the documentation for each tag
        for tag in $TAGS
        do
          echo "Checking out tag: $tag"
          git checkout -f $tag
          git clean -fdx
          python -m pip install .[doc,vis]

          # build the documentation
          cd docs
          make html
          touch _build/html/.nojekyll
          
          # move and copy docs out of the POSYDON folder
          tag_without_v=${tag//v}
          mv _build/html/ $output_folder/$tag_without_v

          # cleanup for the next build
          make clean
          cd ../
        done

        # build the documentation for the development branch
        git checkout -f development

        # clean the repo & install install
        git clean -fdx
        python -m pip install .[doc,vis]
      
        # build the documentation
        cd docs && make html

        # move and copy docs out of the POSYDON folder
        touch _build/html/.nojekyll
        mv _build/html/ $output_folder/development
        cd ../

    - name: Deploy to GitHub Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: _build/
        dry_run: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_WORKSPACE: ${{ github.workspace }}