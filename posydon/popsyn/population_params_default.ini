# POSYDON default BinaryPopulation inifile, use ConfigParser syntax

[environment_variables]
  PATH_TO_POSYDON = '<PATH_TO_POSYDON>'


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;  SimulationProperties  ;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[flow]
  import = ['posydon.binary_evol.flow_chart', 'flow_chart']
    # builtin posydon flow
  absolute_import = None
    # If given, use an absolute filepath to user defined flow: ['<PATH_TO_PY_FILE>', '<NAME>']

[step_HMS_HMS]
  import = ['posydon.binary_evol.MESA.step_mesa', 'MS_MS_step']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']
  interpolation_path = None
    # found by default
  interpolation_filename = None
    # found by default
  interpolation_method = 'linear3c_kNN'
    # 'nearest_neighbour' 'linear3c_kNN' '1NN_1NN'
  save_initial_conditions = True
    # only for interpolation_method='nearest_neighbour'
  track_interpolation = False
    # True False
  stop_method = 'stop_at_max_time'
    # 'stop_at_end' 'stop_at_max_time' 'stop_at_condition'
  stop_star = 'star_1'
    # only for stop_method='stop_at_condition' 'star_1' 'star_2'
  stop_var_name = None
    # only for stop_method='stop_at_condition' str
  stop_value = None
    # only for stop_method='stop_at_condition' float
  stop_interpolate = True
    # True False
  verbose = False
    # True False


[step_CO_HeMS]
  import = ['posydon.binary_evol.MESA.step_mesa', 'CO_HeMS_step']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']
  interpolation_path = None
    # found by default
  interpolation_filename = None
    # found by default
  interpolation_method = 'linear3c_kNN'
    # 'nearest_neighbour' 'linear3c_kNN' '1NN_1NN'
  save_initial_conditions = True
    # only for interpolation_method='nearest_neighbour'
  track_interpolation = False
    # True False
  stop_method = 'stop_at_max_time'
    # 'stop_at_end' 'stop_at_max_time' 'stop_at_condition'
  stop_star = 'star_1'
    # only for stop_method='stop_at_condition' 'star_1' 'star_2'
  stop_var_name = None
    # only for stop_method='stop_at_condition' str
  stop_value = None
    # only for stop_method='stop_at_condition' float
  stop_interpolate = True
    # True False
  verbose = False
    # True False

[step_CO_HMS_RLO]
  import = ['posydon.binary_evol.MESA.step_mesa', 'CO_HMS_RLO_step']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']
  interpolation_path = None
    # found by default
  interpolation_filename = None
    # found by default
  interpolation_method = 'linear3c_kNN'
    # 'nearest_neighbour' 'linear3c_kNN' '1NN_1NN'
  save_initial_conditions = True
    # only for interpolation_method='nearest_neighbour'
  track_interpolation = False
    # True False
  stop_method = 'stop_at_max_time'
    # 'stop_at_end' 'stop_at_max_time' 'stop_at_condition'
  stop_star = 'star_1'
    # only for stop_method='stop_at_condition' 'star_1' 'star_2'
  stop_var_name = None
    # only for stop_method='stop_at_condition' str
  stop_value = None
    # only for stop_method='stop_at_condition' float
  stop_interpolate = True
    # True False
  verbose = False
    # True False

[step_CO_HeMS_RLO]
  import = ['posydon.binary_evol.MESA.step_mesa', 'CO_HeMS_RLO_step']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']
  interpolation_path = None
    # found by default
  interpolation_filename = None
    # found by default
  interpolation_method = 'linear3c_kNN'
    # 'nearest_neighbour' 'linear3c_kNN' '1NN_1NN'
  save_initial_conditions = True
    # only for interpolation_method='nearest_neighbour'
  track_interpolation = False
    # True False
  stop_method = 'stop_at_max_time'
    # 'stop_at_end' 'stop_at_max_time' 'stop_at_condition'
  stop_star = 'star_1'
    # only for stop_method='stop_at_condition' 'star_1' 'star_2'
  stop_var_name = None
    # only for stop_method='stop_at_condition' str
  stop_value = None
    # only for stop_method='stop_at_condition' float
  stop_interpolate = True
    # True False
  verbose = False
    # True False


[step_detached]
  import = ['posydon.binary_evol.DT.step_detached', 'detached_step']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']
  matching_method = 'minimize'
    #'minimize' 'root'
  do_wind_loss = True
    # True False
  do_tides = True
    # True False
  do_gravitational_radiation = True
    # True False
  do_magnetic_braking = True
    # True False
  do_stellar_evolution_and_spin_from_winds = True
    # True False
  RLO_orbit_at_orbit_with_same_am = False
    # True False
  verbose = False
    # True False

[step_disrupted]
  import = ['posydon.binary_evol.DT.step_disrupted','DisruptedStep']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']

[step_merged]
  import = ['posydon.binary_evol.DT.step_merged','MergedStep']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']

[step_initially_single]
  import = ['posydon.binary_evol.DT.step_initially_single','InitiallySingleStep']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']

[step_CE]
  import = ['posydon.binary_evol.CE.step_CEE', 'StepCEE']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']
  prescription='alpha-lambda'
    # 'alpha-lambda'
  common_envelope_efficiency=1.0
    # float in (0, inf)
  common_envelope_option_for_lambda='lambda_from_grid_final_values'
    # (1) 'default_lambda', (2) 'lambda_from_grid_final_values',
    # (3) 'lambda_from_profile_gravitational',
    # (4) 'lambda_from_profile_gravitational_plus_internal',
    # (5) 'lambda_from_profile_gravitational_plus_internal_minus_recombination'
  common_envelope_lambda_default=0.5
    # float in (0, inf) used only for option (1)
  common_envelope_option_for_HG_star="optimistic"
    # 'optimistic', 'pessimistic'
  common_envelope_alpha_thermal=1.0
    # float in (0, inf) used only for option for (4), (5)
  core_definition_H_fraction=0.1
    # 0.01, 0.1, 0.3
  core_definition_He_fraction=0.1
    # 0.1
  CEE_tolerance_err = 0.001
    # float (0, inf)
  common_envelope_option_after_succ_CEE = 'core_not_replaced_noMT'
    # 'core_not_replaced_noMT' 'core_replaced_noMT'
    # 'core_not_replaced_stableMT' 'core_not_replaced_windloss'
  verbose = False
    # True False

[step_SN]
  import = ['posydon.binary_evol.SN.step_SN', 'StepSN']
    # builtin posydon step
  absolute_import = None
    # 'package' kwarg for importlib.import_module
  mechanism = 'Patton&Sukhbold20-engine'
    # 'direct', Fryer+12-rapid', 'Fryer+12-delayed',
    # 'Sukhbold+16-engine', 'Patton&Sukhbold20-engine'
  engine = 'N20'
    # 'N20' for 'Sukhbold+16-engine',
    # 'Patton&Sukhbold20-engine' or None for the others
  PISN = "Marchant+19"
    # None, "Marchant+19"
  ECSN = "Podsiadlowksi+04"
    # "Tauris+15", "Podsiadlowksi+04"
  conserve_hydrogen_envelope = False
    # True, False
  max_neutrino_mass_loss = 0.5
    # float (0,inf)
  max_NS_mass = 2.5
    # float (0,inf)
  use_interp_values = True
    # True, False
  use_profiles = True
    # True, False
  use_core_masses = True
    # True, False
  approx_at_he_depletion = False
    # True, False
  kick = True
    # True, False
  kick_normalisation = 'one_over_mass'
    # "one_minus_fallback", "one_over_mass",
    # "NS_one_minus_fallback_BH_one", "one", "zero"
  sigma_kick_CCSN_NS = 265.0
    # float (0,inf)
  sigma_kick_CCSN_BH = 265.0
    # float (0,inf)
  sigma_kick_ECSN = 20.0
    # float (0,inf)
  verbose = False
    # True False

[step_dco]
  import = ['posydon.binary_evol.DT.double_CO', 'DoubleCO']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']
  n_o_steps_interval = None

[step_end]
  import = ['posydon.binary_evol.step_end', 'step_end']
    # builtin posydon step
  absolute_import = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']

[extra_hooks]
  import_1 = ['posydon.binary_evol.simulationproperties', 'TimingHooks']
    # builtin posydon hook
  absolute_import_1 = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']
  kwargs_1 = {}

  import_2 = ['posydon.binary_evol.simulationproperties', 'StepNamesHooks']
    # builtin posydon hook
  absolute_import_2 = None
    # If given, use an absolute filepath to user defined step: ['<PATH_TO_PY_FILE>', '<NAME>']
  kwargs_2 = {}


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;  BinaryPopulation  ;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[BinaryPopulation_options]
  optimize_ram = True
  # save population in batches
  ram_per_cpu = None
  # set maximum ram per cpu before batch saving (GB)
  dump_rate = 10
  # batch save after evolving N binaries
  temp_directory = 'batches'
  # folder for keeping batch files
  tqdm = False
  # progress bar
  breakdown_to_df = True
  # convert BinaryStars into DataFrames after evolution
  use_MPI = False
  # use only for local MPI runs
  metallicity = [1] # [2., 1., 0.45, 0.2, 0.1, 0.01, 0.001, 0.0001]
  # In units of solar metallicity

  # Random Number Generation
  entropy = None
  # `None` uses system entropy (recommended)
  number_of_binaries = 10
    # int
  binary_fraction_scheme =  'const'
    #'const' 'Moe_17'
  binary_fraction_const  = 1
    # float 0< fraction <=1
  star_formation = 'burst'
    # 'constant' 'burst' 'custom_linear' 'custom_log10' 'custom_linear_histogram' 'custom_log10_histogram'
  max_simulation_time = 13.8e9
    # float (0,inf)

  read_samples_from_file = ''
    # path to file to read initial parameters from (if empty string get random samples)
  primary_mass_scheme = 'Kroupa2001'
    # 'Salpeter', 'Kroupa1993', 'Kroupa2001'
  primary_mass_min = 7
    # float (0,130)
  primary_mass_max = 150.0
    # float (0,130)
  secondary_mass_scheme = 'flat_mass_ratio'
    # 'flat_mass_ratio', 'q=1'
  secondary_mass_min = 0.35
    # float (0,130)
  secondary_mass_max = 150.0
    # float (0,130)
  orbital_scheme = 'period'
    # 'separation', 'period'
  orbital_period_scheme = 'Sana+12_period_extended'
    # used only for orbital_scheme = 'period'
  orbital_period_min = 0.75
    # float (0,inf)
  orbital_period_max = 6000.0
    # float (0,inf)
  #orbital_separation_scheme = 'log_uniform'
    # used only for orbital_scheme = 'separation', 'log_uniform', 'log_normal'
  #orbital_separation_min = 5.0
    # float (0,inf)
  #orbital_separation_max = 1e5
    # float (0,inf)
  #log_orbital_separation_mean = None
    # float (0,inf) used only for orbital_separation_scheme ='log_normal'
  #log_orbital_separation_sigma = None
    # float (0,inf) used only for orbital_separation_scheme ='log_normal'
  eccentricity_scheme = 'zero'
    # 'zero' 'thermal' 'uniform'


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;  Saving Output  ;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[BinaryStar_output]
  extra_columns = {'step_names':'string', 'step_times':'float64'}
  # 'step_times' with from posydon.binary_evol.simulationproperties import TimingHooks

  # LIST BINARY PROPERTIES
  only_select_columns=[
                      'state',
                      'event',
                      'time',
                      #'separation',
                      'orbital_period',
                      'eccentricity',
                      #'V_sys',
                      #'rl_relative_overflow_1',
                      #'rl_relative_overflow_2',
                      'lg_mtransfer_rate',
                      #'mass_transfer_case',
                      #'trap_radius',
                      #'acc_radius',
                      #'t_sync_rad_1',
                      #'t_sync_conv_1',
                      #'t_sync_rad_2',
                      #'t_sync_conv_2',
                      #'nearest_neighbour_distance',
                      ]
  scalar_names=[
              'interp_class_HMS_HMS',
              'interp_class_CO_HMS_RLO',
              'interp_class_CO_HeMS',
              'interp_class_CO_HeMS_RLO',
              'mt_history_HMS_HMS',
              'mt_history_CO_HMS_RLO',
              'mt_history_CO_HeMS',
              'mt_history_CO_HeMS_RLO',
              ]

[SingleStar_1_output]
  # LIST STAR PROPERTIES TO SAVE
  include_S1=True
  # True, False
  only_select_columns=[
                      'state',
                      #'metallicity',
                      'mass',
                      'log_R',
                      'log_L',
                      'lg_mdot',
                      #'lg_system_mdot',
                      #'lg_wind_mdot',
                      'he_core_mass',
                      'he_core_radius',
                      #'c_core_mass',
                      #'c_core_radius',
                      #'o_core_mass',
                      #'o_core_radius',
                      'co_core_mass',
                      'co_core_radius',
                      'center_h1',
                      'center_he4',
                      #'center_c12',
                      #'center_n14',
                      #'center_o16',
                      'surface_h1',
                      'surface_he4',
                      #'surface_c12',
                      #'surface_n14',
                      #'surface_o16',
                      #'log_LH',
                      #'log_LHe',
                      #'log_LZ',
                      #'log_Lnuc',
                      #'c12_c12',
                      #'center_gamma',
                      #'avg_c_in_c_core',
                      #'surf_avg_omega',
                      'surf_avg_omega_div_omega_crit',
                      #'total_moment_of_inertia',
                      #'log_total_angular_momentum',
                      'spin',
                      #'conv_env_top_mass',
                      #'conv_env_bot_mass',
                      #'conv_env_top_radius',
                      #'conv_env_bot_radius',
                      #'conv_env_turnover_time_g',
                      #'conv_env_turnover_time_l_b',
                      #'conv_env_turnover_time_l_t',
                      #'envelope_binding_energy',
                      #'mass_conv_reg_fortides',
                      #'thickness_conv_reg_fortides',
                      #'radius_conv_reg_fortides',
                      #'lambda_CE_1cent',
                      #'lambda_CE_10cent',
                      #'lambda_CE_30cent',
                      #'lambda_CE_pure_He_star_10cent',
                      #'profile',
                      ]
  scalar_names=[
              'natal_kick_array',
              'SN_type',
              'f_fb',
              'spin_orbit_tilt_first_SN',
              'spin_orbit_tilt_second_SN',
              ]

[SingleStar_2_output]
  # LIST STAR PROPERTIES TO SAVE
  include_S2 = True
  # True, False
  only_select_columns = [
                      'state',
                      #'metallicity',
                      'mass',
                      'log_R',
                      'log_L',
                      'lg_mdot',
                      #'lg_system_mdot',
                      #'lg_wind_mdot',
                      'he_core_mass',
                      'he_core_radius',
                      #'c_core_mass',
                      #'c_core_radius',
                      #'o_core_mass',
                      #'o_core_radius',
                      'co_core_mass',
                      'co_core_radius',
                      'center_h1',
                      'center_he4',
                      #'center_c12',
                      #'center_n14',
                      #'center_o16',
                      'surface_h1',
                      'surface_he4',
                      #'surface_c12',
                      #'surface_n14',
                      #'surface_o16',
                      #'log_LH',
                      #'log_LHe',
                      #'log_LZ',
                      #'log_Lnuc',
                      #'c12_c12',
                      #'center_gamma',
                      #'avg_c_in_c_core',
                      #'surf_avg_omega',
                      'surf_avg_omega_div_omega_crit',
                      #'total_moment_of_inertia',
                      #'log_total_angular_momentum',
                      'spin',
                      #'conv_env_top_mass',
                      #'conv_env_bot_mass',
                      #'conv_env_top_radius',
                      #'conv_env_bot_radius',
                      #'conv_env_turnover_time_g',
                      #'conv_env_turnover_time_l_b',
                      #'conv_env_turnover_time_l_t',
                      #'envelope_binding_energy',
                      #'mass_conv_reg_fortides',
                      #'thickness_conv_reg_fortides',
                      #'radius_conv_reg_fortides',
                      #'lambda_CE_1cent',
                      #'lambda_CE_10cent',
                      #'lambda_CE_30cent',
                      #'lambda_CE_pure_He_star_10cent',
                      #'profile',
                      ]
  scalar_names=[
              'natal_kick_array',
              'SN_type',
              'f_fb',
              'spin_orbit_tilt_first_SN',
              'spin_orbit_tilt_second_SN',
              ]
